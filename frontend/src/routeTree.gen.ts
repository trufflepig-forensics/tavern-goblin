/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MenuRouteImport } from './routes/_menu'
import { Route as MenuIndexRouteImport } from './routes/_menu/index'
import { Route as MenuProfileIndexRouteImport } from './routes/_menu/profile/index'

const MenuRoute = MenuRouteImport.update({
  id: '/_menu',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuIndexRoute = MenuIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MenuRoute,
} as any)
const MenuProfileIndexRoute = MenuProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => MenuRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof MenuIndexRoute
  '/profile': typeof MenuProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof MenuIndexRoute
  '/profile': typeof MenuProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_menu': typeof MenuRouteWithChildren
  '/_menu/': typeof MenuIndexRoute
  '/_menu/profile/': typeof MenuProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile'
  id: '__root__' | '/_menu' | '/_menu/' | '/_menu/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MenuRoute: typeof MenuRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_menu': {
      id: '/_menu'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MenuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_menu/': {
      id: '/_menu/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MenuIndexRouteImport
      parentRoute: typeof MenuRoute
    }
    '/_menu/profile/': {
      id: '/_menu/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof MenuProfileIndexRouteImport
      parentRoute: typeof MenuRoute
    }
  }
}

interface MenuRouteChildren {
  MenuIndexRoute: typeof MenuIndexRoute
  MenuProfileIndexRoute: typeof MenuProfileIndexRoute
}

const MenuRouteChildren: MenuRouteChildren = {
  MenuIndexRoute: MenuIndexRoute,
  MenuProfileIndexRoute: MenuProfileIndexRoute,
}

const MenuRouteWithChildren = MenuRoute._addFileChildren(MenuRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  MenuRoute: MenuRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
