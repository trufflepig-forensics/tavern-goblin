services:
  postgres-dev:
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    networks: [ net-tavern-goblin ]
    volumes:
      - postgres-vol:/var/lib/postgresql/data/
    env_file: [ .env ]
    image: tavern-goblin-dev/postgres:${DEV_TAG}
    build:
      dockerfile: ./build/dockerfiles/postgres.Dockerfile

  frontend-dev:
    restart: unless-stopped
    volumes:
      - ./frontend:/app
    env_file: [ .env ]
    networks: [ net-tavern-goblin ]
    user: "${UID}:${GID}"
    image: tavern-goblin-dev/frontend:${DEV_TAG}
    build:
      dockerfile: ./build/dockerfiles/frontend-dev.Dockerfile

  webserver-dev:
    labels:
      - webserver
    restart: unless-stopped
    depends_on: [ postgres-dev ]
    networks: [ net-tavern-goblin ]
    volumes:
      - tavern-goblin-vol:/var/lib/tavern-goblin
      - ./webserver/migrations:/migrations
    env_file: [ .env ]
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-dev:4317
      - RUST_LOG=${RUST_LOG-info,webserver=debug,rorm=debug,galvyn=debug}
      - POSTGRES_HOST=postgres-dev
    user: "${UID}:${GID}"
    image: tavern-goblin-dev/webserver-dev:${DEV_TAG}
    build:
      dockerfile: ./build/dockerfiles/webserver-dev.Dockerfile

  nginx-dev:
    restart: unless-stopped
    networks: [ net-tavern-goblin ]
    ports:
      - "127.0.0.1:8080:80"
    depends_on: [ webserver-dev, frontend-dev ]
    env_file: [ .env ]
    volumes:
      - ./data/conf/nginx-dev/tavern-goblin-dev.conf:/etc/nginx/conf.d/default.conf.template
    image: tavern-goblin-dev/nginx:${DEV_TAG}
    build:
      dockerfile: ./build/dockerfiles/nginx-dev.Dockerfile

networks:
  net-tavern-goblin:
    driver: bridge

volumes:
  postgres-vol:
    name: ${COMPOSE_PROJECT_NAME}-postgres-vol-${DEV_TAG}
  tavern-goblin-vol:
